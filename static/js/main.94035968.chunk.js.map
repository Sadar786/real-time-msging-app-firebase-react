{"version":3,"sources":["features/appSlice.js","SidebarChannel.js","features/userSlice.js","firebase.js","Sidebar.js","ChatHeader.js","Message.js","Chat.js","Login.js","App.js","app/store.js","index.js"],"names":["appSlice","createSlice","name","initialState","channelId","channelName","reducers","setChannelInfo","state","action","payload","actions","selectChannelId","app","selectChannelName","SidebarChannel","_ref","id","dispatch","useDispatch","_jsx","className","onClick","children","_jsxs","userSlice","user","login","logout","selectUser","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","Sidebar","useSelector","channels","setChannels","useState","useEffect","collection","onSnapshot","snapshot","docs","map","doc","channel","data","ExpandMoreIcon","AddIcon","handleAddChannel","prompt","add","Avatar","src","photo","displayName","uid","substring","ExitToAppIcon","signOut","ChatHeader","NotificationsIcon","EditLocationRoundedIcon","PeopleAltRoundedIcon","placeholder","SearchRoundedIcon","SendRoundedIcon","HelpOutlineRoundedIcon","Message","timestamp","message","Date","toDate","toUTCString","Chat","input","setInput","messages","setMessages","orderBy","AddCircleIcon","fontSize","value","disabled","onChange","e","target","concat","type","preventDefault","FieldValue","serverTimestamp","CardGiftcardIcon","GifIcon","EmojiEmotionsIcon","Login","alt","Button","signIn","signInWithPopup","catch","error","alert","App","onAuthStateChanged","authUser","photoURL","email","_Fragment","store","configureStore","reducer","userReducer","appReducer","ReactDOM","render","React","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.94035968.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  channelId: null,\n  channelName: null\n};\n\nexport const appSlice = createSlice({\n  name: 'app',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    setChannelInfo: (state, action) => {\n      state.channelId = action.payload.channelId;\n      state.channelName = action.payload.channelName;\n    },\n\n  },\n\n});\n\nexport const { setChannelInfo } = appSlice.actions;\n\nexport const selectChannelId = (state) => state.app.channelId;\nexport const selectChannelName = (state) => state.app.channelName;\n\nexport default appSlice.reducer;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setChannelInfo } from './features/appSlice';\nimport './SidebarChannel.css';\n\nfunction SidebarChannel({ id, channelName }) {\n    const dispatch = useDispatch();\n\n    return (\n        <div className=\"sidebarChannel\" onClick={()=> dispatch(setChannelInfo({\n            channelId: id,\n            channelName\n        }))}>\n            <h4><span className=\"sidebarChannel__hash\">#</span>{channelName}</h4>\n        </div>\n    )\n}\n\nexport default SidebarChannel\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  user: null\n};\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n    logout: (state, action) => {\n      state.user = null\n    }\n  },\n\n});\n\nexport const { login, logout } = userSlice.actions;\n\nexport const selectUser = (state) => state.user.user;\n\nexport default userSlice.reducer;\n","import firebase from 'firebase';\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyB5KX1ipZXZchl_j0XktHHMgmzjDNA7RPA\",\n    authDomain: \"wazaa-ce3bc.firebaseapp.com\",\n    projectId: \"wazaa-ce3bc\",\n    storageBucket: \"wazaa-ce3bc.appspot.com\",\n    messagingSenderId: \"797080398768\",\n    appId: \"1:797080398768:web:6047db0d6a17d8f8204475\",\n    measurementId: \"G-D7D00L77L7\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { auth, provider };\n\nexport default db;","import React, { useState, useEffect } from \"react\";\nimport \"./Sidebar.css\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SidebarChannel from \"./SidebarChannel\";\nimport SignalCellularAltIcon from \"@material-ui/icons/SignalCellularAlt\";\nimport CallIcon from '@material-ui/icons/Call';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport { Avatar } from '@material-ui/core';\nimport { useSelector} from 'react-redux';\nimport { selectUser } from \"./features/userSlice\";\nimport db, { auth } from \"./firebase\";\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nfunction Sidebar() {\n  const user = useSelector(selectUser);\n  const [channels, setChannels] = useState([]);\n\n  useEffect(()=>{\n    db.collection('channels').onSnapshot(snapshot => {\n      setChannels(snapshot.docs.map(doc => ({\n        id: doc.id,\n        channel: doc.data()\n      })))\n    })\n  }, []);\n\n  const handleAddChannel = () =>{\n    const channelName = prompt('Enter a channel name');\n    if (channelName) {\n      db.collection('channels').add({\n        channelName\n      })\n    }\n  }\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar__top\">\n        <h3>Behindev Chat</h3>\n        <ExpandMoreIcon />\n      </div>\n\n      <div className=\"sidebar__channels\">\n        <div className=\"sidebar__channelsHeader\">\n          <div className=\"sidebar__header\">\n            <ExpandMoreIcon />\n            <h4>Channels</h4>\n          </div>\n\n          <AddIcon onClick={handleAddChannel} className=\"sidebar__addChannel\" />\n        </div>\n\n        <div className=\"sidebar__channelsList\">\n          {channels.map(({id, channel}) => (\n            <SidebarChannel key={id} id={id} channelName={channel.channelName}/>\n          ))}\n       \n        </div>\n      </div>\n\n      \n\n      <div className=\"sidebar__profile\">\n            <Avatar src={user.photo}/>\n            <div className=\"sidebar__profileInfo\">\n                <h3>@{user.displayName}</h3>\n                <p>#{user.uid.substring(0,5)}</p>\n            </div>\n            <div className=\"sidebar__profileIcons\">\n                <ExitToAppIcon  onClick={()=> auth.signOut()} />\n            </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import React from 'react'\nimport './ChatHeader.css'\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport EditLocationRoundedIcon from '@material-ui/icons/EditLocationRounded';\nimport PeopleAltRoundedIcon from '@material-ui/icons/PeopleAltRounded';\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded';\nimport SendRoundedIcon from '@material-ui/icons/SendRounded';\nimport HelpOutlineRoundedIcon from '@material-ui/icons/HelpOutlineRounded';\n\n\nfunction ChatHeader({ channelName }) {\n    return (\n        <div className=\"chatHeader\">\n\n            <div className=\"chatHeader__left\">\n                <h3> <span className=\"chatHeader__hash\">#</span> {channelName} </h3>\n                \n            </div>\n\n            <div className=\"chatHeader__right\">\n                <NotificationsIcon />\n                <EditLocationRoundedIcon />\n                <PeopleAltRoundedIcon />\n\n                <div className=\"chatHeader__search\">\n                    <input placeholder=\"Search\"/>\n                    <SearchRoundedIcon />\n                </div>\n\n                <SendRoundedIcon />\n                <HelpOutlineRoundedIcon />\n\n            </div>\n        </div>\n    )\n}\n\nexport default ChatHeader\n\n","import React from 'react'\nimport { Avatar } from '@material-ui/core'\nimport './Message.css'\n\nfunction Message({ timestamp, user, message}) {\n    return (\n        <div className=\"message\">\n            <Avatar src={user.photo} />\n            <div className=\"message__info\">\n                <h4>{user.displayName}\n                    <span className='message__timestamp'>{new Date(timestamp?.toDate()).toUTCString()}</span>\n                </h4>\n\n                <p>{message}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Message\n","import React, {useState, useEffect} from 'react'\nimport './Chat.css' \nimport ChatHeader from './ChatHeader'\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport CardGiftcardIcon from '@material-ui/icons/CardGiftcard';\nimport GifIcon from '@material-ui/icons/Gif';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport Message from './Message';\nimport { useSelector } from 'react-redux';\nimport { selectChannelId, selectChannelName } from './features/appSlice';\nimport { selectUser } from './features/userSlice';\nimport db from './firebase';\nimport firebase from 'firebase';\n\nfunction Chat() {\n    const user = useSelector(selectUser);\n    const channelId = useSelector(selectChannelId);\n    const channelName = useSelector(selectChannelName);\n    const [input, setInput] = useState('');\n    const [messages, setMessages] = useState([]);\n\n    useEffect(()=>{\n        if (channelId){\n            db.collection('channels').doc(channelId).collection('messages').orderBy('timestamp', 'asc').onSnapshot((snapshot) =>\n                setMessages((snapshot.docs.map(doc => doc.data())))\n            )\n        }\n    }, [channelId]);\n    \n    const sendMessage= e =>{\n        e.preventDefault();\n\n        db.collection('channels').doc(channelId).collection('messages').add({\n            message: input,\n            user: user,\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\n        });\n\n        setInput('');\n    }\n\n\n    return (\n        <div className=\"chat\">\n            <ChatHeader channelName={channelName} />\n\n            <div className=\"chat__messages\">\n                {messages.map((message) => (\n                    <Message \n                        timestamp={message.timestamp}\n                        message={message.message}\n                        user={message.user}\n                     />\n                ))}\n            </div>\n\n            <div className=\"chat__input\">\n                <AddCircleIcon fontSize=\"large\" />\n                <form>\n                    <input value={input} disabled={!channelId} onChange={(e)=> setInput(e.target.value)} placeholder={`Message ${channelName}`} />\n                    <button className=\"chat__inputButton\" type=\"Submit\" onClick={sendMessage} >Send Message</button>\n                </form>\n\n                <div className=\"chat__inputIcons\">\n                    <CardGiftcardIcon fontSize='large' />\n                    <GifIcon fontSize='large' />\n                    <EmojiEmotionsIcon fontSize='large' />\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Chat\n","import React from 'react';\nimport './login.css';\nimport { Button } from '@material-ui/core';\nimport  { auth, provider } from './firebase';\n \nfunction Login() {\n\n    const signIn = () =>{\n        // Google login \n        auth.signInWithPopup(provider).catch(error => alert(error.message));\n    }\n\n    return (\n        <div className=\"login\">\n            <div className=\"login__logo\">\n            <img alt='' src='../'/>\n            </div>\n\n            <Button onClick={signIn}>Sign in</Button>\n        </div>\n    )\n}\n\nexport default Login\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport Chat from './Chat';\nimport { selectUser } from './features/userSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Login from './Login';\nimport { auth } from './firebase';\nimport { login, logout} from './features/userSlice';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const user = useSelector(selectUser);\n\n  useEffect(()=>{\n    auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        // user is logged in\n        dispatch(\n          login({\n          uid: authUser.uid,\n          photo: authUser.photoURL,\n          email: authUser.email,\n          displayName: authUser.displayName\n        }))\n      }else{\n        // user is logged out\n        dispatch(logout());\n      }\n\n    })\n  }, [dispatch]);\n\n  return (\n    <div className=\"app\">\n          {user ? (\n            <>\n              <Sidebar />\n              <Chat />\n            </>\n          ) : (\n            <Login />\n          )} \n\n         \n          \n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../features/userSlice';\nimport appReducer from '../features/appSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n    app: appReducer\n  },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}